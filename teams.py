from typing import Any, Union

import pip
import xlrd as xlrd

# `xlrd` module, third-party
import itertools
import xlrd
import random

filepath = "./test.xls"

#loading data with Soccer results
with xlrd.open_workbook('Excel/World Soccer result.xlsx') as workbook:
    x = random.randrange(0,5)
    worksheet = workbook.sheet_by_index(0)
    rows = (worksheet.row_values(i) for i in range(1, worksheet.nrows))
    cells = itertools.chain.from_iterable(rows)
    items = list({val.replace(" ", " ") for val in cells if val})
    items.sort()
    listOfInt = [
        random.randrange(0,5), random.randrange(0,5),  random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5), random.randrange(0,5),]
# Create a zip object from two lists
zipbObj = zip(items, listOfInt)

# Create a dictionary from zip object
dictOfWords = dict(zipbObj)

print(dictOfWords)